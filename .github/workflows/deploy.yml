name: Deploy OCPP-SERVER

on:
  push:
    branches: [ "master" ] 
  workflow_dispatch:

env:
  DST: /opt/ocpp
  FILE: central_system.py
  SRV: ocpp

jobs:
  copy_code:
    name: "kopijavimas i hera"
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v3
    - run: cp * $DST
    - run: chown openhab:openhab $DST/*

  stop_service:
    name: "Serviso sustabdymas"
    needs: copy_code
    runs-on: [self-hosted]
    steps:
    - name: Stop service
      run: systemctl stop $SRV 
  
    - name: SRV status
      id: srv_status
      run: |
        echo "srv_status=$(systemctl is-active $SRV)" >> $GITHUB_OUTPUT
        
    - name: print status
      run: echo ${{steps.srv_status.outputs.srv_status}}
        
    - name: is SRV active
      if: steps.srv_status.outputs.srv_status != 'inactive'
      run: exit 1
                

  prepare_poetry:
    name: "Poetry paleidimas ir venv paruoÅ¡imas"
    needs: stop_service
    runs-on: [self-hosted]
    steps:
    - name: CD to $DST
      run: cd $DST
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry update

  start_service:
    name: $SRV " serviso paleidimas"
    needs: prepare_poetry
    runs-on: [self-hosted]
    steps:
    - name: Start $SRV service
      run: systemctl start $SRV

    - name: SRV status
      id: srv_status
      run: |
        echo "srv_status=$(systemctl is-active $SRV)" >> $GITHUB_OUTPUT
    - name: print status
      run: echo ${{steps.srv_status.outputs.srv_status}}

    - name: is SRV active
      if: steps.srv_status.outputs.srv_status != 'active'
      run: exit 1
        
