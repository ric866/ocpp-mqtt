name: Deploy OCPP-SERVER

on:
  push:
    branches: [ "master" ] 
  workflow_dispatch:

env:
  DST: /var/lib/openhab/ocpp-server
  FILE: central_system.py
  SRV: ocpp

jobs:
  copy_code:
    name: "kopijavimas i hera"
    runs-on: [self-hosted]

    steps:
    - uses: actions/checkout@v3

    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "$DST/$FILE"

    - name: File exists
      if: steps.check_files.outputs.files_exists == 'true'
      run: mv $DST $DST/$FILE1
    
    - run: cp * $DST
    - run: chown openhab:openhab $DST/*

  stop_service:
    name: "Serviso sustabdymas"
    needs: copy_code
    runs-on: [self-hosted]
    steps:
    - name: Stop service
      run: systemctl stop $SRV 
  
    - name: $SRV status
      id: srv-status
      run: |
        echo "srv-status=systemctl is-active $SRV" >> $GITHUB_OUTPUT
    - name: is service inactive
      run: $srv-status

  prepare_poetry:
    name: "Poetry paleidimas ir venv paruo≈°imas"
    needs: stop_service
    runs-on: [self-hosted]
    steps:
    - name: CD to ocpp-server
      run: cd $DST
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Setup a local virtual environment (if no poetry.toml file)
      run: |
        poetry config virtualenvs.create true --local
        poetry config virtualenvs.in-project true --local
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      with:
        path: ./.venv
        key: venv-${{ hashFiles('poetry.lock') }}
    - name: Install the project dependencies
      run: poetry update

  start_service:
    name: $SRV " serviso paleidimas"
    needs: prepare_poetry
    runs-on: [self-hosted]
    steps:
    - name: Start $SRV service
      run: systemctl start $SRV
